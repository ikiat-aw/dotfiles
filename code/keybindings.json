// 既定値を上書きするには、このファイル内にキー バインドを挿入します
[
  {
    "key": "ctrl+[",
    "command": "extension.vim_escape",
    "when": ""
  },
  {
    "key": "g d",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && vim.active && !inDebugRepl && !isInEmbeddedEditor && vim.mode != 'Insert'"
  },
  {
    "key": "f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "cmd+i",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+i",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+f12",
    "command": "-editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+[",
    "command": "search.action.cancel",
    "when": "listFocus && searchViewletVisible && !inputFocus && searchState != '0'"
  },
  {
    "key": "escape",
    "command": "-search.action.cancel",
    "when": "listFocus && searchViewletVisible && !inputFocus && searchState != '0'"
  },
  {
    "key": "ctrl+[",
    "command": "editor.debug.action.closeExceptionWidget",
    "when": "exceptionWidgetVisible"
  },
  {
    "key": "escape",
    "command": "-editor.debug.action.closeExceptionWidget",
    "when": "exceptionWidgetVisible"
  },
  {
    "key": "ctrl+[",
    "command": "search.action.focusQueryEditorWidget",
    "when": "inSearchEditor"
  },
  {
    "key": "escape",
    "command": "-search.action.focusQueryEditorWidget",
    "when": "inSearchEditor"
  },
  {
    "key": "ctrl+[",
    "command": "notifications.hideList",
    "when": "notificationCenterVisible"
  },
  {
    "key": "escape",
    "command": "-notifications.hideList",
    "when": "notificationCenterVisible"
  },
  {
    "key": "shift+k",
    "command": "editor.debug.action.showDebugHover",
    // "when": "editorTextFocus && inDebugMode",
    "when": "editorHasDefinitionProvider && editorTextFocus && vim.active && isDebugMode && !isInEmbeddedEditor && vim.mode != 'Insert'"
  },
  {
    "key": "cmd+k cmd+i",
    "command": "-editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "shift+k",
    "command": "editor.action.showHover",
    // "when": "editorTextFocus"
    "when": "editorHasDefinitionProvider && editorTextFocus && vim.active && !isInEmbeddedEditor && vim.mode != 'Insert'"
  },
  {
    "key": "cmd+k cmd+i",
    "command": "-editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "u",
    "command": "undo",
    "when": "editorHasDefinitionProvider && editorTextFocus && vim.active && !isInEmbeddedEditor && vim.mode != 'Insert'"
  },
  {
    "key": "cmd+z",
    "command": "-undo"
  },
  {
    "key": "ctrl+r",
    "command": "redo",
    "when": "editorHasDefinitionProvider && editorTextFocus && vim.active && !isInEmbeddedEditor && vim.mode != 'Insert'"
  },
  {
    "key": "shift+cmd+z",
    "command": "-redo"
  }
]
